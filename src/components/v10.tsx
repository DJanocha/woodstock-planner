/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/0SwhyIyeu3y
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";

import { useState } from "react";
import { Button } from "~/components/ui/button";

export function V10() {
  const events = [
    {
      dateStart: new Date("2024-07-29T10:00:00"),
      dateEnd: new Date("2024-07-29T13:00:00"),
      kind: "Meeting",
      description: "Weekly team meeting",
      color: "bg-primary text-primary-foreground",
    },
    {
      dateStart: new Date("2024-07-29T09:00:00"),
      dateEnd: new Date("2024-07-29T14:00:00"),
      kind: "Call",
      description: "Call with supplier",
      color: "bg-secondary text-secondary-foreground",
    },
    {
      dateStart: new Date("2024-07-29T10:00:00"),
      dateEnd: new Date("2024-07-29T11:30:00"),
      kind: "Lunch",
      description: "Lunch with client",
      color: "bg-muted text-muted-foreground",
    },
    {
      dateStart: new Date("2024-07-29T11:00:00"),
      dateEnd: new Date("2024-07-29T12:30:00"),
      kind: "Meeting",
      description: "Project planning meeting",
      color: "bg-card text-card-foreground",
    },
    {
      dateStart: new Date("2024-07-29T12:00:00"),
      dateEnd: new Date("2024-07-29T13:30:00"),
      kind: "Presentation",
      description: "Present quarterly results",
      color: "bg-accent text-accent-foreground",
    },
  ];
  const [selectedDate, setSelectedDate] = useState(new Date("2024-07-29"));
  const handleDateChange = (date: Date) => {
    setSelectedDate(date);
  };
  return (
    <div className="flex h-screen flex-col bg-background text-foreground">
      <div className="flex-1 overflow-y-auto">
        <div className="mx-auto grid max-w-6xl grid-cols-[100px_1fr] gap-4">
          <div className="sticky top-0 space-y-4 rounded-lg bg-card p-4 text-card-foreground shadow-sm">
            {[...Array.from({ length: 24 })].map((_, hour) => (
              <div
                key={hour}
                className="flex items-center justify-center rounded-lg p-2 shadow-sm"
              >
                {new Date(
                  `${selectedDate.toISOString().slice(0, 10)}T${hour.toString().padStart(2, "0")}:00:00`,
                ).toLocaleTimeString([], {
                  hour: "2-digit",
                  minute: "2-digit",
                })}
              </div>
            ))}
          </div>
          <div className="grid grid-cols-1 gap-4 overflow-x-auto sm:grid-cols-2 lg:grid-cols-5">
            {[...Array.from({ length: 24 })].map((_, hour) => (
              <div key={hour} className="relative grid grid-cols-1 gap-4">
                {events.map((event, index) => {
                  const eventStart = event.dateStart.getHours();
                  const eventEnd = event.dateEnd.getHours();
                  if (hour >= eventStart && hour < eventEnd) {
                    const eventDuration =
                      (event.dateEnd.getTime() - event.dateStart.getTime()) /
                      (1000 * 60 * 60);
                    const eventHeight = `h-[${eventDuration * 100}%]`;
                    const eventPosition = `${eventStart - hour >= 0 ? "top-0" : "bottom-0"}`;
                    const eventOrder = `${eventStart - hour >= 0 ? "order-1" : "order-2"}`;
                    const eventWidth = `w-[${((eventEnd - eventStart) * 100) / 24}%]`;
                    const eventLeft = `left-[${(eventStart / 24) * 100}%]`;
                    return (
                      <div
                        key={index}
                        className={`col-span-1 rounded-lg bg-card p-4 text-card-foreground shadow-sm ${event.color} ${eventHeight} ${eventPosition} ${eventOrder} ${eventWidth} ${eventLeft}`}
                      >
                        <div className="mb-2 flex items-center justify-between">
                          <div className="text-sm font-medium">
                            {event.dateStart.toLocaleTimeString([], {
                              hour: "2-digit",
                              minute: "2-digit",
                            })}
                            -{" "}
                            {event.dateEnd.toLocaleTimeString([], {
                              hour: "2-digit",
                              minute: "2-digit",
                            })}
                          </div>
                          <div className="rounded-full px-2 py-1 text-xs font-medium">
                            {event.kind}
                          </div>
                        </div>
                        <div className="text-sm">{event.description}</div>
                      </div>
                    );
                  }
                  return (
                    <div
                      key={index}
                      className="col-span-1 rounded-lg bg-background shadow-sm"
                    />
                  );
                })}
              </div>
            ))}
          </div>
        </div>
      </div>
      <div className="sticky bottom-0 mx-auto mt-8 flex max-w-6xl justify-center gap-4 bg-background py-4">
        <Button
          variant="outline"
          onClick={() => handleDateChange(new Date("2024-07-24"))}
        >
          Wednesday
        </Button>
        <Button
          variant="outline"
          onClick={() => handleDateChange(new Date("2024-07-25"))}
        >
          Thursday
        </Button>
        <Button
          variant="outline"
          onClick={() => handleDateChange(new Date("2024-07-26"))}
        >
          Friday
        </Button>
        <Button
          variant="outline"
          onClick={() => handleDateChange(new Date("2024-07-27"))}
        >
          Saturday
        </Button>
      </div>
    </div>
  );
}
