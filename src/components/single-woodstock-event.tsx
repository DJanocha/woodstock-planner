/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/4ZAfb8CCaAG
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

import { ComponentProps, SVGProps, useMemo } from "react";
import {
  ReceiptTextIcon,
  MapPinIcon,
  XIcon,
  HeartIcon,
  ThumbsDownIcon,
  ShieldQuestionIcon,
} from "lucide-react";
import { z } from "zod";
import { woodstockEventValidator } from "~/validators/woodstock-event";
import { Button } from "./ui/button";
import { format } from "date-fns";
import { CollapsibleLargeText } from "~/app/_components/collapsible-large-text";

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
export function SingleWoodstockEvent({
  woodstockEvent,
}: {
  woodstockEvent: z.input<typeof woodstockEventValidator>;
}) {
  const { place, description, instances } = woodstockEvent;
  const configItems = useMemo((): {
    Icon: typeof MapPinIcon;
    text: string;
    isCollapsible: boolean;
  }[] => {
    return [
      {
        Icon: MapPinIcon,
        text: place,
        isCollapsible: false,
      },
      {
        Icon: ReceiptTextIcon,
        text: description,
        isCollapsible: true,
      },
    ];
  }, []);
  const preferencesConfigItems = useMemo<
    { icon: typeof MapPinIcon; onClick: () => void; key: string }[]
  >(
    () => [
      {
        key: "like",
        icon: HeartIcon,
        onClick: () => {
          console.log("liking");
        },
      },
      {
        key: "undecide",
        icon: ShieldQuestionIcon,
        onClick: () => {
          console.log("undeciding");
        },
      },
      {
        key: "dislike",
        icon: ThumbsDownIcon,
        onClick: () => {
          console.log("disliking");
        },
      },
    ],
    [],
  );
  return (
    <div className="h-30 rounded-lg border bg-background p-4 sm:p-6">
      <div className="flex items-start justify-between">
        <div className="grid gap-1">
          <div className="flex w-full flex-row items-start justify-between ">
            <h3 className="w-11/12 overflow-ellipsis text-lg font-semibold text-black">
              {woodstockEvent.event}
            </h3>
            <div className="flex flex-row gap-2">
              {preferencesConfigItems.map((preference) => (
                <Button
                  className="w-1/12 p-0"
                  size="icon"
                  asChild
                  variant={"link"}
                  key={preference.key}
                  onClick={preference.onClick}
                >
                  {<preference.icon className="h-6 w-6" />}
                </Button>
              ))}
            </div>
          </div>
          {configItems.map(({ Icon, text, isCollapsible }) => (
            <div
              className="flex items-start gap-2 text-sm text-muted-foreground"
              key={text}
            >
              <Icon className="size-6" />
              {isCollapsible ? (
                <CollapsibleLargeText text={text} />
              ) : (
                <span className="flex-1 overflow-ellipsis">{text}</span>
              )}
            </div>
          ))}
        </div>
        <XIcon />
      </div>

      <div className="mt-4 flex flex-wrap items-center gap-2">
        {instances.map((instance) => (
          <div
            key={instance.id}
            className="w-max rounded-full bg-gradient-to-r from-green-500 to-green-600 px-3 py-1 text-xs font-medium text-green-50"
          >
            {format(instance.dateStart, "EEE HH:mm")} -{" "}
            {format(instance.dateEnd, "HH:mm")}
          </div>
        ))}
      </div>
    </div>
  );
}
